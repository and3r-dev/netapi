// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VeiculoAPI.Data;

#nullable disable

namespace VeiculoAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("VeiculoAPI.Models.Caminhao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CapacidadeCarga")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VeiculoId")
                        .IsUnique();

                    b.ToTable("Caminhoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CapacidadeCarga = 15000m,
                            VeiculoId = 2
                        });
                });

            modelBuilder.Entity("VeiculoAPI.Models.Carro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CapacidadePassageiro")
                        .HasColumnType("int");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VeiculoId")
                        .IsUnique();

                    b.ToTable("Carros");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CapacidadePassageiro = 5,
                            VeiculoId = 1
                        });
                });

            modelBuilder.Entity("VeiculoAPI.Models.Revisao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Km")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorDaRevisao")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Revisoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Data = new DateTime(2021, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Km = 10000,
                            ValorDaRevisao = 500m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 2,
                            Data = new DateTime(2022, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Km = 20000,
                            ValorDaRevisao = 800m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 3,
                            Data = new DateTime(2023, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Km = 50000,
                            ValorDaRevisao = 1200m,
                            VeiculoId = 2
                        });
                });

            modelBuilder.Entity("VeiculoAPI.Models.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Veiculos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ano = 2020,
                            Cor = "Preto",
                            Modelo = "Sedan",
                            Placa = "ABC1234"
                        },
                        new
                        {
                            Id = 2,
                            Ano = 2018,
                            Cor = "Branco",
                            Modelo = "Caminhão",
                            Placa = "XYZ5678"
                        });
                });

            modelBuilder.Entity("VeiculoAPI.Models.Caminhao", b =>
                {
                    b.HasOne("VeiculoAPI.Models.Veiculo", "Veiculo")
                        .WithOne("Caminhao")
                        .HasForeignKey("VeiculoAPI.Models.Caminhao", "VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("VeiculoAPI.Models.Carro", b =>
                {
                    b.HasOne("VeiculoAPI.Models.Veiculo", "Veiculo")
                        .WithOne("Carro")
                        .HasForeignKey("VeiculoAPI.Models.Carro", "VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("VeiculoAPI.Models.Revisao", b =>
                {
                    b.HasOne("VeiculoAPI.Models.Veiculo", "Veiculo")
                        .WithMany("Revisoes")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("VeiculoAPI.Models.Veiculo", b =>
                {
                    b.Navigation("Caminhao")
                        .IsRequired();

                    b.Navigation("Carro")
                        .IsRequired();

                    b.Navigation("Revisoes");
                });
#pragma warning restore 612, 618
        }
    }
}
